stages:
  - build
  - unit_test
  - integration_test
  - code_quality
  - deploy
  - monitoring

variables:
  DOCKER_IMAGE: "my-web-app:${CI_COMMIT_SHORT_SHA}"

build:
  stage: build
  script:
    - echo "Building the application..."
    - docker build -t $DOCKER_IMAGE .
  artifacts:
    paths:
      - build/

unit_test:
  stage: unit_test
  script:
    - echo "Running unit tests..."
    - npm install
    - npm run test:unit

integration_test:
  stage: integration_test
  script:
    - echo "Running integration tests..."
    - npm run test:integration

code_quality:
  stage: code_quality
  script:
    - echo "Running ESLint for code quality check..."
    - npm run lint
  allow_failure: true  # 코드 품질 검사 실패 시에도 전체 파이프라인은 진행 (피드백용)

deploy:
  stage: deploy
  script:
    - echo "Deploying the application..."
    - docker push $DOCKER_IMAGE
    - kubectl set image deployment/my-web-app my-web-app=$DOCKER_IMAGE --record
  environment:
    name: production

monitoring:
  stage: monitoring
  script:
    - echo "Performing post-deployment monitoring..."
    - ./monitoring/check_status.sh
